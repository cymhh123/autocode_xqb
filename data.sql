/*
SQLyog Ultimate v12.09 (64 bit)
MySQL - 5.6.26 : Database - auto_code
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`auto_code` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `auto_code`;

/*Table structure for table `back_user` */

DROP TABLE IF EXISTS `back_user`;

CREATE TABLE `back_user` (
  `username` varchar(20) NOT NULL,
  `password` varchar(50) NOT NULL,
  `add_time` datetime NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `back_user` */

insert  into `back_user`(`username`,`password`,`add_time`) values ('admin','admin','2014-06-24 10:12:49'),('fafafaf','fdsafasf','2016-09-22 18:01:10'),('fawfef','fsafsaf','2016-09-22 18:02:16');

/*Table structure for table `datasource_config` */

DROP TABLE IF EXISTS `datasource_config`;

CREATE TABLE `datasource_config` (
  `dc_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '数据源id',
  `name` varchar(20) DEFAULT NULL COMMENT '数据源名称',
  `driver_class` varchar(50) DEFAULT NULL COMMENT '数据源驱动',
  `jdbc_url` varchar(100) DEFAULT NULL COMMENT '链接',
  `username` varchar(50) DEFAULT NULL COMMENT '用户名',
  `password` varchar(50) DEFAULT NULL COMMENT '密码',
  `back_user` varchar(20) DEFAULT NULL COMMENT '生成人',
  PRIMARY KEY (`dc_id`),
  KEY `f_username_user` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

/*Data for the table `datasource_config` */

insert  into `datasource_config`(`dc_id`,`name`,`driver_class`,`jdbc_url`,`username`,`password`,`back_user`) values (1,'test2','com.mysql.jdbc.Driver','jdbc:mysql://127.0.0.1:3306/auto_code','chyou','chyou','admin'),(2,'xqb','com.mysql.jdbc.Driver','jdbc:mysql://192.168.3.103:3306/xqb','bzy_admin','admin','admin');

/*Table structure for table `template_config` */

DROP TABLE IF EXISTS `template_config`;

CREATE TABLE `template_config` (
  `tc_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `save_path` varchar(100) DEFAULT NULL,
  `content` text,
  `back_user` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`tc_id`),
  KEY `f_backuser` (`back_user`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

/*Data for the table `template_config` */

insert  into `template_config`(`tc_id`,`name`,`save_path`,`content`,`back_user`) values (2,'Entity',NULL,'package ${context.packageName}.entity;\r\n\r\npublic class ${context.javaBeanName} {\r\n#foreach($column in $columns) \r\n	private ${column.javaType} ${column.javaFieldName};\r\n#end\r\n\r\n#foreach(${column} in ${columns}) \r\n	public void set${column.javaFieldNameUF}(${column.javaType} ${column.javaFieldName}){\r\n		this.${column.javaFieldName} = ${column.javaFieldName};\r\n	}\r\n\r\n	public ${column.javaType} get${column.javaFieldNameUF}(){\r\n		return this.${column.javaFieldName};\r\n	}\r\n\r\n#end}','admin'),(3,'DAO',NULL,'package ${context.packageName}.dao;\r\n\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\nimport org.durcframework.dao.BaseDao;\r\n\r\npublic interface ${context.javaBeanName}Dao extends BaseDao<${context.javaBeanName}> {\r\n}','admin'),(4,'Service',NULL,'package ${context.packageName}.service;\r\n\r\nimport ${context.packageName}.dao.${context.javaBeanName}Dao;\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\nimport org.durcframework.service.CrudService;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\npublic class ${context.javaBeanName}Service extends CrudService<${context.javaBeanName}, ${context.javaBeanName}Dao> {\r\n\r\n}\r\n','admin'),(5,'SearchEntity',NULL,'package ${context.packageName}.entity;\r\n\r\nimport java.util.Date;\r\n\r\nimport org.durcframework.entity.SearchEntity;\r\nimport org.durcframework.expression.annotation.ValueField;\r\n\r\npublic class ${context.javaBeanName}Sch extends SearchEntity{\r\n\r\n#foreach($column in $columns) \r\n    private ${column.javaTypeBox} ${column.javaFieldName}Sch;\r\n#end\r\n\r\n#foreach(${column} in ${columns}) \r\n    public void set${column.javaFieldNameUF}Sch(${column.javaTypeBox} ${column.javaFieldName}Sch){\r\n        this.${column.javaFieldName}Sch = ${column.javaFieldName}Sch;\r\n    }\r\n    \r\n    @ValueField(column = \"${column.columnName}\")\r\n    public ${column.javaTypeBox} get${column.javaFieldNameUF}Sch(){\r\n        return this.${column.javaFieldName}Sch;\r\n    }\r\n\r\n#end\r\n\r\n}','admin'),(6,'Mybatis',NULL,'<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE  mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\r\n<mapper namespace=\"${context.packageName}.dao.${context.javaBeanName}Dao\">\r\n    <resultMap id=\"queryResultMap\" type=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n        #foreach($column in $columns)\r\n        <result column=\"${column.columnName}\" property=\"${column.javaFieldName}\" jdbcType=\"${column.mybatisJdbcType}\" />\r\n        #end\r\n    </resultMap>\r\n\r\n    <select id=\"find\" parameterType=\"org.durcframework.expression.ExpressionQuery\"\r\n		resultMap=\"queryResultMap\">\r\n		SELECT *\r\n		FROM ${table.tableName} t\r\n		<include refid=\"expressionBlock.where\" />\r\n		<choose>\r\n			<when test=\"sortname == null\">\r\n				ORDER BY ${context.javaPkName} desc\r\n			</when>\r\n			<otherwise>\r\n				ORDER BY #{sortname,jdbcType=VARCHAR} ${sortorder}\r\n			</otherwise>\r\n		</choose>\r\n		<if test=\"!isQueryAll\">\r\n			LIMIT\r\n			#{firstResult,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}\r\n		</if>\r\n	</select>\r\n\r\n\r\n    <select id=\"findTotalCount\" parameterType=\"org.durcframework.expression.ExpressionQuery\"\r\n		resultType=\"java.lang.Integer\">\r\n		SELECT count(*) FROM ${table.tableName} t\r\n		<include refid=\"expressionBlock.where\" />\r\n    </select>\r\n\r\n    <insert id=\"save\" parameterType=\"org.durcframework.autocode.entity.DataSourceConfig\"\r\n#if(${pkColumn.isIdentity})\r\n    keyProperty=\"${context.javaPkName}\" keyColumn=\"${context.pkName}\" useGeneratedKeys=\"true\"\r\n#end\r\n    >\r\n	INSERT INTO ${table.tableName}\r\n         (\r\n #set ($i=0) \r\n        #foreach($column in $columns) \r\n            #if(!${column.isIdentityPk})               \r\n        #if($i > 0),#end ${column.columnName}\r\n               #set($i=$i+1)\r\n            #end          \r\n        #end\r\n          )\r\n	VALUES (\r\n        #set ($i=0) \r\n        #foreach($column in $columns) \r\n            #if(!${column.isIdentityPk})               \r\n        #if($i > 0),#end #{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}}\r\n               #set($i=$i+1)\r\n            #end          \r\n        #end\r\n \r\n        )\r\n	</insert>\r\n\r\n\r\n    <update id=\"update\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n    UPDATE ${table.tableName}\r\n    SET \r\n#set ($i=0) \r\n        #foreach($column in $columns) \r\n            #if(!${column.isPk})               \r\n        #if($i > 0),#end ${column.columnName}=#{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}}\r\n               #set($i=$i+1)\r\n            #end          \r\n        #end	\r\n    WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\r\n    </update>\r\n\r\n    <select id=\"get\" resultMap=\"queryResultMap\" parameterType=\"java.io.Serializable\">\r\n		SELECT *\r\n		FROM ${table.tableName}\r\n		WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\r\n	</select>\r\n	\r\n	<delete id=\"del\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n		DELETE FROM ${table.tableName}\r\n		WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\r\n	</delete>\r\n\r\n</mapper>','admin'),(7,'xqb_mybatis',NULL,'<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"${context.packageName}.dao.${context.javaBeanName}Dao\">\r\n    \r\n    <#-- 输出字段列 -->\r\n	<sql id=\"${context.javaBeanName}Columns\">\r\n		<#assign columnField>\r\n			<#list columns as c>\r\n		a.${c.columnName} AS \"${c.javaFieldName}\",\r\n			</#list>\r\n		</#assign>\r\n		${columnField?substring(0, columnField?last_index_of(\",\"))}\r\n	</sql>\r\n\r\n	<#-- 输出字段关联表 -->\r\n	<sql id=\"${context.javaBeanName}Joins\">\r\n		\r\n	</sql>\r\n    \r\n	<select id=\"get\" resultType=\"${context.javaBeanName}\">\r\n		SELECT \r\n			<include refid=\"${context.javaBeanName}Columns\"/>\r\n		FROM ${table.tableName} a\r\n		<include refid=\"${context.javaBeanName}Joins\"/>\r\n		WHERE a.id = ${\"#\"}{id}\r\n	</select>\r\n	\r\n	<select id=\"findList\" resultType=\"${context.javaBeanName}\">\r\n		SELECT \r\n			<include refid=\"${context.javaBeanName}Columns\"/>\r\n		FROM ${table.tableName} a\r\n		<include refid=\"${context.javaBeanName}Joins\"/>\r\n		<where>\r\n			a.del_status = 0\r\n			<#list columns as c>\r\n			<if test=\"${c.javaFieldName} != null and ${c.javaFieldName} != \'\'\">\r\n			AND a.${c.columnName} = ${\"#\"}{${c.javaFieldName}}\r\n			</if>\r\n			</#list>\r\n		</where>\r\n		ORDER BY a.create_date DESC\r\n	</select>\r\n	\r\n	<insert id=\"insert\">\r\n		INSERT INTO ${table.tableName}(\r\n		<#assign insertField>\r\n			<#list columns as c>\r\n			${c.columnName},\r\n			</#list>\r\n		</#assign>\r\n		${insertField?substring(0, insertField?last_index_of(\",\"))}\r\n		) VALUES (\r\n		<#assign insertJavaField>\r\n			<#list columns as c>			\r\n			${\"#\"}{${c.javaFieldName}},\r\n			</#list>\r\n		</#assign>\r\n		${insertJavaField?substring(0, insertJavaField?last_index_of(\",\"))}\r\n		)\r\n	</insert>\r\n	\r\n	<update id=\"update\">\r\n		UPDATE ${table.tableName}\r\n		<set>\r\n		    <#assign updateField>\r\n                <#list columns as c>\r\n            <if test=\"${c.javaFieldName} != null and ${c.javaFieldName} != \'\'\">\r\n            	${c.columnName} = ${\"#\"}{${c.javaFieldName}},\r\n            </if>\r\n            	</#list>\r\n            </#assign>\r\n            ${updateField?substring(0, updateField?last_index_of(\",\"))}\r\n            </if>\r\n		</set>\r\n		WHERE id = ${\"#\"}{id}\r\n	</update>\r\n	\r\n	<update id=\"delete\">\r\n		UPDATE ${table.tableName} SET del_status = 1 WHERE id = ${\"#\"}{id}\r\n	</update>\r\n	\r\n</mapper>\r\n','admin'),(8,'xqb_entity',NULL,'package ${context.packageName}.entity;\r\nimport com.mdzy.xqb.modules.sys.entity.DataEntity;\r\n\r\n/**\r\n * ${context.javaBeanName}Entity\r\n * @author chyou\r\n * @version\r\n */\r\npublic class ${context.javaBeanName} extends DataEntity {\r\n\r\n    private static final long serialVersionUID = 1L;\r\n    <#-- 生成字段属性 -->\r\n    <#list columns as c>\r\n             <#if (c.javaFieldName!=\"id\"&&c.javaFieldName!=\"createDate\"&&c.javaFieldName!=\"updDate\"&&c.javaFieldName!=\"delStatus\")>\r\n        private ${c.javaType} ${c.javaFieldName};\r\n             </#if>\r\n    </#list>\r\n\r\n    <#-- 构造方法 -->\r\n    public ${context.javaBeanName}() {\r\n        super();\r\n    }\r\n    <#list columns as c>\r\n             <#if (c.javaFieldName!=\"id\"&&c.javaFieldName!=\"createDate\"&&c.javaFieldName!=\"updDate\"&&c.javaFieldName!=\"delStatus\")>\r\n    public void set${c.javaFieldNameUF}(${c.javaType} ${c.javaFieldName}){\r\n               this.${c.javaFieldName} = ${c.javaFieldName};\r\n        }\r\n        public ${c.javaType} get${c.javaFieldNameUF}(){\r\n              return this.${c.javaFieldName};\r\n        }\r\n             </#if>\r\n    </#list>\r\n}\r\n','admin'),(9,'xqb_dao',NULL,'package ${context.packageName}.dao;\r\n\r\nimport com.mdzy.xqb.common.persistence.CrudDao;\r\nimport com.mdzy.xqb.common.persistence.annotation.MyBatisDao;\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\n\r\n/**\r\n * ${context.javaBeanName}DAO接口\r\n * @author chyou\r\n * @version\r\n */\r\n@MyBatisDao\r\npublic interface ${context.javaBeanName}Dao extends CrudDao<${context.javaBeanName}> {\r\n	\r\n}','admin'),(10,'xqb_service',NULL,'package ${context.packageName}.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.mdzy.xqb.modules.sys.service.CrudService;\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\nimport ${context.packageName}.dao.${context.javaBeanName}Dao;\r\n\r\n/**\r\n * ${context.javaBeanName}Service\r\n * @author chyou\r\n * @version\r\n */\r\n@Service\r\npublic class ${context.javaBeanName}Service extends CrudService<${context.javaBeanName}Dao, ${context.javaBeanName}> {\r\n	\r\n}','admin'),(11,'xqb_action',NULL,'package ${context.packageName}.action;\r\n\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\nimport ${context.packageName}.service.${context.javaBeanName}Service;\r\nimport com.github.pagehelper.PageInfo;\r\nimport com.mdzy.xqb.common.exception.ServiceException;\r\nimport com.mdzy.xqb.common.utils.StringUtils;\r\nimport com.mdzy.xqb.modules.sys.action.BaseController;\r\nimport com.mdzy.xqb.modules.sys.entity.ExecuteBean;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.validation.BindingResult;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport javax.validation.Valid;\r\nimport java.util.List;\r\n\r\n/**\r\n * ${context.javaBeanName}Action\r\n * auther:chyou\r\n */\r\n@Controller\r\n@RequestMapping(\"\")\r\npublic class ${context.javaBeanName}Action extends BaseController {\r\n\r\n    @Autowired\r\n    private ${context.javaBeanName}Service ${context.javaBeanNameL}Service;\r\n\r\n    /**\r\n     * 列表\r\n     * @param page 当前页\r\n     * @param entity 参数实体\r\n     * @return\r\n     */\r\n    @RequestMapping(\"/list\")\r\n    @ResponseBody\r\n    public Object list(Integer page,@Valid ${context.javaBeanName} ${context.javaBeanNameL},BindingResult bindingResult){\r\n        if(bindingResult.hasErrors()){\r\n             return  new ExecuteBean<>(\"201\",\"参数有误\");\r\n        }\r\n        List<${context.javaBeanName}> list = this.${context.javaBeanNameL}Service.findByPage(entity,page);\r\n        PageInfo<${context.javaBeanName}> pageInfo = new PageInfo<>(list);\r\n        return new ExecuteBean<List<${context.javaBeanName}>>(list,pageInfo.getPages(), (int) pageInfo.getTotal());\r\n    }\r\n\r\n    /**\r\n     * 单个\r\n     * @param id\r\n     * @return\r\n     */\r\n    @RequestMapping(\"/one\")\r\n    @ResponseBody\r\n    public Object get(String id,Model model){\r\n       ${context.javaBeanName} ${context.javaBeanNameL} = this.${context.javaBeanNameL}Service.get(id);\r\n       return new ExecuteBean<${context.javaBeanName}>(${context.javaBeanNameL});\r\n    }\r\n\r\n    /**\r\n     * 添加\r\n     * @param ${context.javaBeanNameL}\r\n     * @return\r\n     */\r\n    @RequestMapping(\"/save\")\r\n    @ResponseBody\r\n    public Object save(${context.javaBeanName} ${context.javaBeanNameL}){\r\n        this.${context.javaBeanNameL}Service.save(${context.javaBeanNameL});\r\n        return new ExecuteBean<>();\r\n    }\r\n\r\n    /**\r\n     * 删除\r\n     * @param id\r\n     * @return\r\n     */\r\n     @RequestMapping(\"/delete\")\r\n     @ResponseBody\r\n     public Object delete(String id){\r\n         this.${context.javaBeanNameL}Service.delete(id);\r\n         return new ExecuteBean<>();\r\n     }\r\n}\r\n','admin'),(12,'xqbadmin_dao',NULL,'package ${context.packageName}.dao;\r\n\r\nimport com.mdzy.xqbadmin.common.persistence.CrudDao;\r\nimport com.mdzy.xqbadmin.common.persistence.annotation.MyBatisDao;\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\n\r\n/**\r\n * ${context.javaBeanName}DAO接口\r\n * @author chyou\r\n * @version\r\n */\r\n@MyBatisDao\r\npublic interface ${context.javaBeanName}Dao extends CrudDao<${context.javaBeanName}> {\r\n	\r\n}','admin'),(13,'xqbadmin_entity',NULL,'package ${context.packageName}.entity;\r\nimport com.mdzy.xqbadmin.modules.sys.entity.DataEntity;\r\n\r\n/**\r\n * ${context.javaBeanName}Entity\r\n * @author chyou\r\n * @version\r\n */\r\npublic class ${context.javaBeanName} extends DataEntity {\r\n\r\n	private static final long serialVersionUID = 1L;\r\n	<#-- 生成字段属性 -->\r\n	<#list columns as c>\r\n             <#if (c.javaFieldName!=\"id\"&&c.javaFieldName!=\"createDate\"&&c.javaFieldName!=\"updDate\"&&c.javaFieldName!=\"delStatus\")>\r\n        private ${c.javaType} ${c.javaFieldName};\r\n             </#if>\r\n	</#list>\r\n\r\n	<#-- 构造方法 -->\r\n	public ${context.javaBeanName}() {\r\n		super();\r\n	}\r\n	<#list columns as c>\r\n             <#if (c.javaFieldName!=\"id\"&&c.javaFieldName!=\"createDate\"&&c.javaFieldName!=\"updDate\"&&c.javaFieldName!=\"delStatus\")>\r\n	public void set${c.javaFieldNameUF}(${c.javaType} ${c.javaFieldName}){\r\n               this.${c.javaFieldName} = ${c.javaFieldName};\r\n        }\r\n        public ${c.javaType} get${c.javaFieldNameUF}(){\r\n              return this.${c.javaFieldName};\r\n        }\r\n             </#if>\r\n	</#list>\r\n}','admin'),(14,'xqbadmin_action',NULL,'package ${context.packageName}.action;\r\n\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\nimport ${context.packageName}.service.${context.javaBeanName}Service;\r\nimport com.github.pagehelper.PageInfo;\r\nimport com.mdzy.xqbadmin.common.exception.ServiceException;\r\nimport com.mdzy.xqbadmin.common.utils.StringUtils;\r\nimport com.mdzy.xqbadmin.modules.sys.action.BaseController;\r\nimport com.mdzy.xqbadmin.modules.sys.entity.ExecuteBean;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.validation.BindingResult;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport javax.validation.Valid;\r\nimport java.util.List;\r\n\r\n/**\r\n * ${context.javaBeanName}Action\r\n * auther:chyou\r\n */\r\n@Controller\r\n@RequestMapping(\"\")\r\npublic class ${context.javaBeanName}Action extends BaseController {\r\n\r\n    @Autowired\r\n    private ${context.javaBeanName}Service ${context.javaBeanNameL}Service;\r\n\r\n    /**\r\n     * 列表\r\n     * @param page 当前页\r\n     * @param ${context.javaBeanNameL} 参数实体\r\n     * @return\r\n     */\r\n    @RequestMapping(\"/list\")\r\n    @ResponseBody\r\n    public Object list(Integer page,@Valid ${context.javaBeanName} ${context.javaBeanNameL},BindingResult bindingResult){\r\n        if(bindingResult.hasErrors()){\r\n             return  new ExecuteBean<>(\"201\",\"参数有误\");\r\n        }\r\n        List<${context.javaBeanName}> list = this.${context.javaBeanNameL}Service.findByPage(${context.javaBeanNameL},page);\r\n        PageInfo<${context.javaBeanName}> pageInfo = new PageInfo<>(list);\r\n        return new ExecuteBean<List<${context.javaBeanName}>>(list,pageInfo.getPages(), (int) pageInfo.getTotal());\r\n    }\r\n\r\n    /**\r\n     * 单个\r\n     * @param id\r\n     * @return\r\n     */\r\n    @RequestMapping(\"/one\")\r\n    @ResponseBody\r\n    public Object get(String id,Model model){\r\n       ${context.javaBeanName} ${context.javaBeanNameL} = this.${context.javaBeanNameL}Service.get(id);\r\n       return new ExecuteBean<${context.javaBeanName}>(${context.javaBeanNameL});\r\n    }\r\n\r\n    /**\r\n     * 添加\r\n     * @param ${context.javaBeanNameL}\r\n     * @return\r\n     */\r\n    @RequestMapping(\"/save\")\r\n    @ResponseBody\r\n    public Object save(${context.javaBeanName} ${context.javaBeanNameL}){\r\n        this.${context.javaBeanNameL}Service.save(${context.javaBeanNameL});\r\n        return new ExecuteBean<>();\r\n    }\r\n\r\n    /**\r\n     * 删除\r\n     * @param id\r\n     * @return\r\n     */\r\n     @RequestMapping(\"/delete\")\r\n     @ResponseBody\r\n     public Object delete(String id){\r\n         this.${context.javaBeanNameL}Service.delete(id);\r\n         return new ExecuteBean<>();\r\n     }\r\n}\r\n','admin'),(15,'xqbadmin_service',NULL,'package ${context.packageName}.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.mdzy.xqbadmin.modules.sys.service.CrudService;\r\nimport ${context.packageName}.entity.${context.javaBeanName};\r\nimport ${context.packageName}.dao.${context.javaBeanName}Dao;\r\n\r\n/**\r\n * ${context.javaBeanName}Service\r\n * @author chyou\r\n * @version\r\n */\r\n@Service\r\npublic class ${context.javaBeanName}Service extends CrudService<${context.javaBeanName}Dao, ${context.javaBeanName}> {\r\n	\r\n}','admin'),(16,'xqbadmin_mybatis',NULL,'<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"${context.packageName}.dao.${context.javaBeanName}Dao\">\r\n    \r\n    <#-- 输出字段列 -->\r\n	<sql id=\"${context.javaBeanName}Columns\">\r\n		<#assign columnField>\r\n			<#list columns as c>\r\n		a.${c.columnName} AS \"${c.javaFieldName}\",\r\n			</#list>\r\n		</#assign>\r\n		${columnField?substring(0, columnField?last_index_of(\",\"))}\r\n	</sql>\r\n\r\n	<#-- 输出字段关联表 -->\r\n	<sql id=\"${context.javaBeanName}Joins\">\r\n		\r\n	</sql>\r\n    \r\n	<select id=\"get\" resultType=\"${context.javaBeanName}\">\r\n		SELECT \r\n			<include refid=\"${context.javaBeanName}Columns\"/>\r\n		FROM ${table.tableName} a\r\n		<include refid=\"${context.javaBeanName}Joins\"/>\r\n		WHERE a.id = ${\"#\"}{id}\r\n	</select>\r\n	\r\n	<select id=\"findList\" resultType=\"${context.javaBeanName}\">\r\n		SELECT \r\n			<include refid=\"${context.javaBeanName}Columns\"/>\r\n		FROM ${table.tableName} a\r\n		<include refid=\"${context.javaBeanName}Joins\"/>\r\n		<where>\r\n			a.del_status = 0\r\n			<#list columns as c>\r\n			<if test=\"${c.javaFieldName} != null and ${c.javaFieldName} != \'\'\">\r\n			AND a.${c.columnName} = ${\"#\"}{${c.javaFieldName}}\r\n			</if>\r\n			</#list>\r\n		</where>\r\n		ORDER BY a.create_date DESC\r\n	</select>\r\n	\r\n	<insert id=\"insert\">\r\n		INSERT INTO ${table.tableName}(\r\n		<#assign insertField>\r\n			<#list columns as c>\r\n			${c.columnName},\r\n			</#list>\r\n		</#assign>\r\n		${insertField?substring(0, insertField?last_index_of(\",\"))}\r\n		) VALUES (\r\n		<#assign insertJavaField>\r\n			<#list columns as c>			\r\n			${\"#\"}{${c.javaFieldName}},\r\n			</#list>\r\n		</#assign>\r\n		${insertJavaField?substring(0, insertJavaField?last_index_of(\",\"))}\r\n		)\r\n	</insert>\r\n	\r\n	<update id=\"update\">\r\n		UPDATE ${table.tableName}\r\n		<set>\r\n		    <#assign updateField>\r\n                <#list columns as c>\r\n            <if test=\"${c.javaFieldName} != null and ${c.javaFieldName} != \'\'\">\r\n            	${c.columnName} = ${\"#\"}{${c.javaFieldName}},\r\n            </if>\r\n            	</#list>\r\n            </#assign>\r\n            ${updateField?substring(0, updateField?last_index_of(\",\"))}\r\n            </if>\r\n		</set>\r\n		WHERE id = ${\"#\"}{id}\r\n	</update>\r\n	\r\n	<update id=\"delete\">\r\n		UPDATE ${table.tableName} SET del_status = 1 WHERE id = ${\"#\"}{id}\r\n	</update>\r\n	\r\n</mapper>\r\n','admin');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
